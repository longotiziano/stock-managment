services:
  zookeeper: 
    image: confluentinc/cp-zookeeper:7.5.0 
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 
    ports:
      - "2181:2181" 

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper 
    ports:
      - "9092:9092" 
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  db:
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data 
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./sql/backups:/docker-entrypoint-initdb.d/backups
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - "8081:80"
    depends_on:
      - db

  python:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
      - db
    volumes:
      - ./:/app 

volumes:
  pgdata:

